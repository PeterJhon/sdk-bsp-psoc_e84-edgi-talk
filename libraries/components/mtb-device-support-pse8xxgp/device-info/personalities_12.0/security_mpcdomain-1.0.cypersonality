<?xml version="1.0" encoding="utf-8"?>

<PersonalityTemplate id="mpc_domain" name="MPC Domain" version="1.0" xmlns="http://cypress.com/xsd/cyhwpersonality_v9">
  <FittingRules>
    <MappingRules>
      <IpBlock name="VirtualResource" />
      <Resource name="vres\.security\.mpc\.mpcdomain" />
     <OperatingMode value="MCU" />
    </MappingRules>
  </FittingRules>
  <ExposedMembers>
    <ExposedMember key="name" paramId="name" />
    <ExposedMember key="mpc_readable$idx" paramId="mpc_readable$idx" repeatCount="8" />
    <ExposedMember key="mpc_writable$idx" paramId="mpc_writable$idx" repeatCount="8" />
    <ExposedMember key="mpc_secure$idx" paramId="mpc_secure$idx" repeatCount="8" />

    <ExposedMember key="read_perm" paramId="read_perm" />
    <ExposedMember key="write_perm" paramId="write_perm" />
    <ExposedMember key="ns_perm" paramId="ns_perm" />
    <!-- mpc_accumulate# is generated recursively, with each building on the previous one.  We only want to expose the last one that contains everything. -->
    <ExposedMember key="numeric" paramId="mpc_accumulate7" />
  </ExposedMembers>
  <Parameters>
    <ParamDoc id="doc" name="Configuration Help" group="Overview" default="file:///`${cy_libs_path()}`/docs/pdl/html/group__group__mpc.html" linkText="Open MPC Documentation" visible="true" desc="Open MPC Documentation" />
    <ParamBool id="debug" name="debug" group="Internal" default="false" visible="false" editable="false" desc="" />

    <ParamString id="name" name="" group="" default="`${getBlockDisplayName(INST_LOC, true)}`" visible="false" editable="false" desc="" />
	<Repeat count="8">
      <ParamString id="pc_name$idx" name="" group="" default="Protection Context $idx: `${getExposedMember(&quot;vres[0].security[0]&quot;, &quot;pc$idx&quot;)}`" visible="false" editable="false" desc="" />
	</Repeat>

    <!-- Basic settings -->
    <Repeat count="8">
      <ParamBool id="mpc_readable$idx" name="Readable" group="Memory Protection Controller/`${pc_name$idx}`" default="true" visible="true" editable="`${$idx != 0}`" desc="Can protection context $idx read this memory?" />
      <ParamBool id="mpc_writable$idx" name="Writable" group="Memory Protection Controller/`${pc_name$idx}`" default="true" visible="true" editable="`${$idx != 0}`" desc="Can protection context $idx write this memory?" />
      <ParamBool id="mpc_secure$idx" name="Secure" group="Memory Protection Controller/`${pc_name$idx}`" default="true" visible="true" editable="`${$idx != 0}`" desc="Are secure code priviliges required to access this memory from protection context $idx?" />
      <ParamRange id="mpc_numeric$idx" name="mpc_numeric$idx" group="Memory Protection Controller/`${pc_name$idx}`" default="`${((mpc_writable$idx ? 1 : 0) &lt;&lt; 2) | ((mpc_readable$idx ? 1 : 0) &lt;&lt; 1)}`" min="0" max="7" resolution="1" visible="false" editable="false" desc="" />
      <ParamRange id="mpc_accumulate$idx" name="mpc_accumulate$idx" group="Memory Protection Controller/`${pc_name$idx}`" default="`${($idx == 0) ? mpc_numeric$idx : (getParamValue(&quot;mpc_accumulate&quot; . ($idx-1)) &lt;&lt; 4) | mpc_numeric$idx}`" min="0" max="4294967295" resolution="1" visible="false" editable="false" desc="" />
    </Repeat>
    <ParamString id="read_perm" default="`${
      (mpc_readable0 eq true ? 1 : 0) |
      ((mpc_readable1 eq true ? 1 : 0) &lt;&lt; 1u) |
      ((mpc_readable2 eq true ? 1 : 0) &lt;&lt; 2u) |
      ((mpc_readable3 eq true ? 1 : 0) &lt;&lt; 3u) |
      ((mpc_readable4 eq true ? 1 : 0) &lt;&lt; 4u) |
      ((mpc_readable5 eq true ? 1 : 0) &lt;&lt; 5u) |
      ((mpc_readable6 eq true ? 1 : 0) &lt;&lt; 6u) |
      ((mpc_readable7 eq true ? 1 : 0) &lt;&lt; 7u)
      }`" editable="false" visible="`${debug}`" desc="" group="" name="Test_R" />
    <ParamString id="write_perm" default="`${
      (mpc_writable0 eq true ? 1 : 0) |
      ((mpc_writable1 eq true ? 1 : 0) &lt;&lt; 1u) |
      ((mpc_writable2 eq true ? 1 : 0) &lt;&lt; 2u) |
      ((mpc_writable3 eq true ? 1 : 0) &lt;&lt; 3u) |
      ((mpc_writable4 eq true ? 1 : 0) &lt;&lt; 4u) |
      ((mpc_writable5 eq true ? 1 : 0) &lt;&lt; 5u) |
      ((mpc_writable6 eq true ? 1 : 0) &lt;&lt; 6u) |
      ((mpc_writable7 eq true ? 1 : 0) &lt;&lt; 7u)
      }`" editable="false" visible="`${debug}`" desc="" group="" name="Test_W" />
    <ParamString id="ns_perm" default="`${
      (mpc_secure0 eq true ? 0 : 1) |
      ((mpc_secure1 eq true ? 0 : 1) &lt;&lt; 1u) |
      ((mpc_secure2 eq true ? 0 : 1) &lt;&lt; 2u) |
      ((mpc_secure3 eq true ? 0 : 1) &lt;&lt; 3u) |
      ((mpc_secure4 eq true ? 0 : 1) &lt;&lt; 4u) |
      ((mpc_secure5 eq true ? 0 : 1) &lt;&lt; 5u) |
      ((mpc_secure6 eq true ? 0 : 1) &lt;&lt; 6u) |
      ((mpc_secure7 eq true ? 0 : 1) &lt;&lt; 7u)
      }`" editable="false" visible="`${debug}`" desc="" group="" name="Test_NS" />
  </Parameters>

  <DRCs>
  </DRCs>

  <!-- Generated firmware -->
  <ConfigFirmware>
  </ConfigFirmware>
</PersonalityTemplate>
