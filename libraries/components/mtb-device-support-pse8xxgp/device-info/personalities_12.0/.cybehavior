<?xml version="1.0" encoding="utf-8"?>
<BehaviorDefintion xmlns="http://cypress.com/xsd/cybehavior_v1">
  <!--The clock tree diagrams use expressions to update what they display. Clocks displayed in the diagram are expected to implement this to allow for their speed to be displayed in the clock body.-->
  <Behavior type="clock_v1">
    <!--The current frequency of the clock. This is combined with the accuracy using `${formatFrequency(frequency, accuracy)}` to get the information to show in the clock body.-->
    <Member key="frequency"/>
    <!--The current accuracy of the clock. This is combined with the frequency using `${formatFrequency(frequency, accuracy)}` to get the information to show in the clock body.-->
    <Member key="accuracy"/>
  </Behavior>

  <!--The clock tree diagrams use expressions to update what they display. Clocks displayed in the diagram that have multiple source options are expected to implement this to allow for their selected source to be shown in the mux feeding into them.-->
  <Behavior type="sourced_clock_v1">
    <Extends type="clock_v1"/>
    <!--The display name for the clock's source clock. This is displayed on a mux prior to the clock in the diagram to show the user the selected source clock.-->
    <Member key="sourceClockDisplayName"/>
  </Behavior>

  <!-- Memory regions exposed by the memory personality -->
  <Behavior type="memory_regions_v1">
    <Member key="regionPhysMemIds" /> <!-- Semicolon-separated list of the physical memory ID of each region -->
    <Member key="regionOffsets" /> <!-- Semicolon-separated list of the offset of each region from the beginning of the physical memory -->
    <Member key="regionSizes" /> <!-- Semicolon-separated list of the size of each region in bytes -->
    <Member key="regionIds" /> <!-- Semicolon-separated list of the name of each region -->
    <Member key="regionCores" /> <!-- Semicolon-separated list of the core(s) each region is assigned to. Multiple cores may be separated by commas. -->
    <Member key="regionDescription$idx{0}" repeatCount="256" /> <!-- Description of each region -->
    <Member key="regionReservedGUIDs" /> <!-- Semicolon-separated list of reserved region GUIDs. User-defined regions should be listed as "USER_DEFINED" -->
    <Member key="maxSupportedRegions" /> <!-- Maximum number of memory regions -->
    <Member key="maxSupportedCores" /> <!-- Maximum number of cores -->
    <Member key="maxSupportedViewMaps" /> <!-- Maximum number of address aliases for a physical memory -->
  </Behavior>

  <!-- Protection ranges exposed by the security_mpc personality -->
  <Behavior type="mpc_v1">
    <Member key="range_count" /> <!-- Number of ranges -->
    <Member key="start_offset$idx" repeatCount="99" /> <!-- Beginning of range relative to the start of the MPC range -->
    <Member key="end_offset$idx" repeatCount="99" /> <!-- End of range (exclusive) relative to the start of the MPC range -->
    <Member key="security$idx" repeatCount="99" /> <!-- Location ID of memory protection settings personality -->
    <Member key="security_display$idx" repeatCount="99" /> <!-- Name of associated memory protection settings -->
    <Member key="block_name" /> <!-- Unique name of the MPC for source code generation -->
    <Member key="response" /> <!-- Whether to raise an exception for invalid memory access -->
  </Behavior>

  <!-- Protection ranges exposed by the security_sau personality -->
  <Behavior type="sau_v1">
    <Member key="name$idx" repeatCount="8" /> <!-- Name of region -->
    <Member key="enable$idx" repeatCount="8" /> <!-- Whether region is enabled -->
    <Member key="base_addr$idx" repeatCount="8" /> <!-- Start address of region -->
    <Member key="end_addr$idx" repeatCount="8" /> <!-- End address of region -->
    <Member key="access$idx" repeatCount="8" /> <!-- Protection setting of region -->
    <Member key="cores" /> <!-- Comma-separated list of cores that the SAU is associated with -->
    <Member key="starts_list" /> <!-- Semicolon-separated list of start addresses -->
    <Member key="ends_list" /> <!-- Semicolon-separated list of end addresses -->
  </Behavior>
</BehaviorDefintion>
