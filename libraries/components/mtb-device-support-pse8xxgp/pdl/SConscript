from building import *
import rtconfig
Import('RTT_ROOT')

# get current directory
cwd = GetCurrentDir()
src = []
path = []

# The set of source files associated with this SConscript file.
src = Split('''
            drivers/source/cy_sysclk_v2.c
            drivers/source/cy_systick_v2.c
            drivers/source/cy_gpio.c
            drivers/source/cy_sysint_v2.c
            drivers/source/cy_syslib.c
            drivers/source/cy_syspm_v4.c
            drivers/source/cy_ipc_pipe.c
            drivers/source/cy_ipc_sema.c
            drivers/source/cy_ipc_drv.c
            drivers/source/cy_scb_common.c
            ''')

# Add toolchain-specific assembly files
if rtconfig.PLATFORM in ['gcc']:
    src += ['drivers/source/TOOLCHAIN_GCC_ARM/cy_syslib_ext.S']
elif rtconfig.PLATFORM in ['armclang']:
    src += ['drivers/source/TOOLCHAIN_ARM/cy_syslib_ext.S']

path = [cwd + '/drivers/include', cwd + 'drivers/third_party/ethernet/include']

if GetDepend(['SOC_SERIES_IFX_PSOCE84']):
    src += ['drivers/source/cy_syspm_ppu.c']
    src += ['drivers/source/cy_syspm_pdcm.c']
    src += ['drivers/source/cy_axidmac.c']
    src += ['drivers/source/ppu_v1.c']
    src += ['devices/source/cy_device.c']


if GetDepend(['RT_USING_SERIAL']):
    src += ['drivers/source/cy_dma.c']
    src += ['drivers/source/cy_dmac.c']
    src += ['drivers/source/cy_scb_uart.c']

if GetDepend(['RT_USING_I2C']):
    src += ['drivers/source/cy_scb_i2c.c']

if GetDepend(['RT_USING_ADC']):
    src += ['drivers/source/cy_dma.c']
    src += ['drivers/source/cy_dmac.c']
    if GetDepend(['SOC_SERIES_IFX_PSOCE84']):
        src += ['drivers/source/cy_autanalog_sar.c']
        src += ['drivers/source/cy_autanalog_ac.c']
        src += ['drivers/source/cy_autanalog.c']
        src += ['drivers/source/cy_autanalog_ctb.c']
        src += ['drivers/source/cy_autanalog_dac.c']
        src += ['drivers/source/cy_autanalog_ptc.c']
        src += ['drivers/source/cy_systrimm.c']
        src += ['drivers/source/cy_rram.c']

if GetDepend(['BSP_USING_SDCARD']) or GetDepend(['BSP_USING_WIFI_HOST_DRIVER']):
    src += ['drivers/source/cy_sd_host.c']

if GetDepend(['RT_USING_PWM']):
    src += ['drivers/source/cy_tcpwm_pwm.c']
#     if not GetDepend(['RT_USING_HWTIMER']):
#         src += ['drivers/source/cy_tcpwm_counter.c']

if GetDepend(['RT_USING_SPI']):
    src += ['drivers/source/cy_scb_spi.c']

# if GetDepend(['BSP_USING_FLASH']):
#     src += ['drivers/source/cy_smif.c']
#     src += ['drivers/source/cy_smif_memslot.c']
#     src += ['drivers/source/cy_smif_sfdp.c']
#     src += ['drivers/source/cy_smif_hb_flash.c']

if GetDepend('BSP_USING_LCD'):
    src += Split('''
            drivers/source/cy_mipidsi.c
            drivers/third_party/COMPONENT_GFXSS/cy_graphics.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_setting.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_tools.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_util.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_os.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_interface.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_core.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_shell.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_database.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_lcd.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/dc_layer_feature.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_platform.c
            drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000/viv_dc_hardware.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_stroke.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_path.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_matrix.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_image.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_dump.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_os.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_kernel.c
            drivers/third_party/COMPONENT_GFXSS/vsi/gcnano/vg_lite_hal.c
            
            ''')
            
    path += [cwd + '/drivers/include']
    path += [cwd + '/drivers/third_party/COMPONENT_GFXSS']
    path += [cwd + '/drivers/third_party/COMPONENT_GFXSS/vsi/dcnano8000']
    path += [cwd + '/drivers/third_party/COMPONENT_GFXSS/vsi/gcnano']


CPPDEFINES = [
"APP_SOCMEMSRAM_GPUBUF_SIZE=0x00300000",
"APP_SOCMEMSRAM_CM55NS_APP_SIZE=0x00060800",
"APP_SOCMEMSRAM_GPUBUF_SHARED_SIZE=0x0001F800",
]

if GetDepend('BSP_USING_RTC'):
    src += ['drivers/source/cy_rtc.c']

# if GetDepend('BSP_USING_ON_CHIP_FLASH') or GetDepend('BSP_USING_CYW43012_BT') :
#     src += ['drivers/source/cy_flash.c']

if GetDepend(['BSP_USING_HYPERAM']):
    src += ['drivers/source/cy_smif.c']
    src += ['drivers/source/cy_smif_memslot.c']
    src += ['drivers/source/cy_smif_hb_flash.c']
    src += ['drivers/source/cy_smif_sfdp.c']

if GetDepend(['RT_USING_WDT']):
    src += ['drivers/source/cy_wdt.c']

if GetDepend(['RT_USING_HWTIMER']):
    src += ['drivers/source/cy_tcpwm_counter.c']

if GetDepend(['RT_USING_AUDIO']):
    src += ['drivers/source/cy_tdm.c']
    src += ['drivers/source/cy_pdm_pcm_v2.c']

if GetDepend(['SOC_SERIES_IFX_PSOCE84']):
    path += [cwd + '/devices/include']
    path += [cwd + '/devices/include/ip']

group = DefineGroup('Libraries', src, depend=[''], CPPPATH=path, CPPDEFINES = CPPDEFINES)
Return('group')

